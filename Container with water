https://leetcode.com/problems/container-with-most-water/description/?envType=problem-list-v2&envId=two-pointers

//Brute force
class Solution {
    public int maxArea(int[] height) {
            int maxWater=0;
        for(int i=0;i<height.length;i++){
            for(int j=i+1;j<height.length;j++){
                int capacity=Math.min(height[i],height[j]);
                maxWater=Math.max(capacity*(j-i),maxWater);
            }
        }

        return maxWater;
    }
}

//Two pointers
class Solution {
    public int maxArea(int[] height) {
        int left=0;
        int right=height.length-1;
        int maxWater=0;
        while(left<right){
            int minheight=Math.min(height[left],height[right]);
            maxWater=Math.max(minheight*(right-left),maxWater);
            if(height[left]<height[right]){
                left++;
            }
            else
                right--;
        }
        return maxWater;
    }
}
